{
  "definition": {
    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
    "actions": {
      "Validation": {
        "actions": {
          "UserID_or_ProductID_empty": {
            "inputs": {
              "body": "Parameter userId and productId must not empty.",
              "statusCode": 400
            },
            "kind": "Http",
            "runAfter": {},
            "type": "Response"
          }
        },
        "else": {
          "actions": {
            "Get_user": {
              "inputs": {
                "method": "GET",
                "queries": {
                  "userId": "@triggerBody()['userId']"
                },
                "uri": "https://serverlessohlondonuser.azurewebsites.net/api/GetUser"
              },
              "runAfter": {},
              "type": "Http"
            },
            "UserId_exist_check": {
              "actions": {
                "Get_product": {
                  "inputs": {
                    "method": "GET",
                    "queries": {
                      "productId": "@triggerBody()['productId']"
                    },
                    "uri": "https://serverlessohlondonproduct.azurewebsites.net/api/GetProduct"
                  },
                  "runAfter": {},
                  "type": "Http"
                },
                "ProductId_exist_check": {
                  "actions": {
                    "CreateRating": {
                      "inputs": {
                        "body": "@triggerBody()",
                        "method": "POST",
                        "uri": "https://second-functions.azurewebsites.net/api/CreateRating"
                      },
                      "runAfter": {},
                      "type": "Http"
                    },
                    "Create_Rating_Response": {
                      "inputs": {
                        "body": "@body('CreateRating')",
                        "statusCode": "@outputs('CreateRating')['statusCode']"
                      },
                      "kind": "Http",
                      "runAfter": {
                        "CreateRating": [
                          "Succeeded"
                        ]
                      },
                      "type": "Response"
                    }
                  },
                  "else": {
                    "actions": {
                      "ProductID_not_found": {
                        "inputs": {
                          "body": "ProductID @{triggerBody()?['productId']} is not found.",
                          "statusCode": 404
                        },
                        "kind": "Http",
                        "runAfter": {},
                        "type": "Response"
                      }
                    }
                  },
                  "expression": {
                    "and": [
                      {
                        "equals": [
                          "@outputs('Get_product')['statusCode']",
                          200
                        ]
                      }
                    ]
                  },
                  "runAfter": {
                    "Get_product": [
                      "Succeeded"
                    ]
                  },
                  "type": "If"
                }
              },
              "else": {
                "actions": {
                  "UserId_not_found": {
                    "inputs": {
                      "body": "UserID @{triggerBody()?['userId']} is not found.",
                      "statusCode": 404
                    },
                    "kind": "Http",
                    "runAfter": {},
                    "type": "Response"
                  }
                }
              },
              "expression": {
                "and": [
                  {
                    "equals": [
                      "@outputs('Get_user')['statusCode']",
                      200
                    ]
                  }
                ]
              },
              "runAfter": {
                "Get_user": [
                  "Succeeded"
                ]
              },
              "type": "If"
            }
          }
        },
        "expression": {
          "or": [
            {
              "equals": [
                "@length(triggerBody()?['userId'])",
                0
              ]
            },
            {
              "equals": [
                "@length(triggerBody()?['productId'])",
                0
              ]
            }
          ]
        },
        "runAfter": {},
        "type": "If"
      }
    },
    "contentVersion": "1.0.0.0",
    "outputs": {},
    "parameters": {},
    "triggers": {
      "manual": {
        "inputs": {
          "schema": {
            "properties": {
              "locationName": {
                "type": "string"
              },
              "productId": {
                "type": "string"
              },
              "rating": {
                "type": "integer"
              },
              "userId": {
                "type": "string"
              },
              "userNotes": {
                "type": "string"
              }
            },
            "required": [
              "userId",
              "productId",
              "rating"
            ],
            "type": "object"
          }
        },
        "kind": "Http",
        "operationOptions": "EnableSchemaValidation",
        "type": "Request"
      }
    }
  }
}